variables:
  - template: /eng/pipelines/common/variables.yml

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    isOfficialBuild: false
    stages:
    - stage: Build
      jobs:

      #
      # Build CoreCLR and Libraries with Libraries tests
      # For running libraries tests and installer tests
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
          platforms:
          - osx_x64
          - osx_arm64
          jobParameters:
            nameSuffix: CoreCLR_Libraries
            buildArgs: -s clr+libs+libs.tests -rc Release -c $(_BuildConfig) /p:ArchiveTests=true
            timeoutInMinutes: 120
            postBuildSteps:
              - template: /eng/pipelines/common/upload-artifact-step.yml
                parameters:
                  rootFolder: $(Build.SourcesDirectory)/artifacts/bin
                  includeRootFolder: false
                  archiveType: $(archiveType)
                  archiveExtension: $(archiveExtension)
                  tarCompression: $(tarCompression)
                  artifactName: CoreCLR_Libraries_BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)
                  displayName: Build Assets
              - template: /eng/pipelines/common/upload-artifact-step.yml
                parameters:
                  rootFolder: $(Build.SourcesDirectory)/artifacts/helix
                  includeRootFolder: false
                  archiveType: $(archiveType)
                  archiveExtension: $(archiveExtension)
                  tarCompression: $(tarCompression)
                  artifactName: CoreCLR_Libraries_TestArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)

      #
      # Build CoreCLR and Libraries with the respective tests
      # for the test configurations we run.
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
          platforms:
          - osx_x64
          - osx_arm64
          jobParameters:
            nameSuffix: Libraries_CheckedCoreCLR
            buildArgs: -s clr+libs+libs.tests -c $(_BuildConfig) -rc Checked /p:ArchiveTests=true
            timeoutInMinutes: 120
            postBuildSteps:
              - template: /eng/pipelines/coreclr/templates/build-native-test-assets-step.yml
              - template: /eng/pipelines/common/upload-artifact-step.yml
                parameters:
                  rootFolder: $(Build.SourcesDirectory)/artifacts/bin
                  includeRootFolder: false
                  archiveType: $(archiveType)
                  archiveExtension: $(archiveExtension)
                  tarCompression: $(tarCompression)
                  artifactName: Libraries_CheckedCoreCLR_BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)
                  displayName: Build Assets
              - template: /eng/pipelines/common/upload-artifact-step.yml
                parameters:
                  rootFolder: $(Build.SourcesDirectory)/artifacts/helix
                  includeRootFolder: false
                  archiveType: $(archiveType)
                  archiveExtension: $(archiveExtension)
                  tarCompression: $(tarCompression)
                  artifactName: Libraries_CheckedCoreCLR_TestArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)
            extraVariablesTemplates:
              - template: /eng/pipelines/common/templates/runtimes/native-test-assets-variables.yml
                parameters:
                  testGroup: innerloop
                  configOverride: Checked

      #
      # Libraries Debug Test Execution against a release coreclr runtime
      # Only when the PR contains a libraries change
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/libraries/run-test-job.yml
          buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
          platforms:
          - osx_x64
          - osx_arm64
          helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
          jobParameters:
            isOfficialBuild: false
            testScope: innerloop
            liveRuntimeBuildConfig: release
            unifiedArtifactsName: CoreCLR_Libraries_BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(debugOnPrReleaseOnRolling)
            helixArtifactsName: CoreCLR_Libraries_TestArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(debugOnPrReleaseOnRolling)
            unifiedBuildNameSuffix: CoreCLR_Libraries
            unifiedBuildConfigOverride: ${{ variables.debugOnPrReleaseOnRolling }}

      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/libraries/run-test-job.yml
          buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
          platforms:
          - osx_x64
          - osx_arm64
          helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
          helixQueueGroup: libraries
          jobParameters:
            testScope: innerloop
            liveRuntimeBuildConfig: checked
            unifiedArtifactsName: Libraries_CheckedCoreCLR_BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)
            helixArtifactsName: Libraries_CheckedCoreCLR_TestArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)
            unifiedBuildNameSuffix: Libraries_CheckedCoreCLR
